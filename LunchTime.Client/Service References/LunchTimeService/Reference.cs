//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LunchTime.Client.LunchTimeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RestaurantData", Namespace="http://schemas.datacontract.org/2004/07/LunchTime.Service.DataTransferObjects")]
    [System.SerializableAttribute()]
    public partial class RestaurantData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatisticData", Namespace="http://schemas.datacontract.org/2004/07/LunchTime.Service.DataTransferObjects")]
    [System.SerializableAttribute()]
    public partial class StatisticData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfidenceIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan MaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan MeanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan MinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan StandardDeviationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfidenceInterval {
            get {
                return this.ConfidenceIntervalField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfidenceIntervalField, value) != true)) {
                    this.ConfidenceIntervalField = value;
                    this.RaisePropertyChanged("ConfidenceInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Max {
            get {
                return this.MaxField;
            }
            set {
                if ((this.MaxField.Equals(value) != true)) {
                    this.MaxField = value;
                    this.RaisePropertyChanged("Max");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Mean {
            get {
                return this.MeanField;
            }
            set {
                if ((this.MeanField.Equals(value) != true)) {
                    this.MeanField = value;
                    this.RaisePropertyChanged("Mean");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Min {
            get {
                return this.MinField;
            }
            set {
                if ((this.MinField.Equals(value) != true)) {
                    this.MinField = value;
                    this.RaisePropertyChanged("Min");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Range {
            get {
                return this.RangeField;
            }
            set {
                if ((this.RangeField.Equals(value) != true)) {
                    this.RangeField = value;
                    this.RaisePropertyChanged("Range");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan StandardDeviation {
            get {
                return this.StandardDeviationField;
            }
            set {
                if ((this.StandardDeviationField.Equals(value) != true)) {
                    this.StandardDeviationField = value;
                    this.RaisePropertyChanged("StandardDeviation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArrivalTimeData", Namespace="http://schemas.datacontract.org/2004/07/LunchTime.Service.DataTransferObjects")]
    [System.SerializableAttribute()]
    public partial class ArrivalTimeData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LunchTime.Client.LunchTimeService.RestaurantData RestaurantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeArrivedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LunchTime.Client.LunchTimeService.RestaurantData Restaurant {
            get {
                return this.RestaurantField;
            }
            set {
                if ((object.ReferenceEquals(this.RestaurantField, value) != true)) {
                    this.RestaurantField = value;
                    this.RaisePropertyChanged("Restaurant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeArrived {
            get {
                return this.TimeArrivedField;
            }
            set {
                if ((this.TimeArrivedField.Equals(value) != true)) {
                    this.TimeArrivedField = value;
                    this.RaisePropertyChanged("TimeArrived");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LunchTimeService.ILunchTime")]
    public interface ILunchTime {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILunchTime/GetArrivalTimes", ReplyAction="http://tempuri.org/ILunchTime/GetArrivalTimesResponse")]
        System.TimeSpan[] GetArrivalTimes(string restaurant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILunchTime/GetArrivalTimes", ReplyAction="http://tempuri.org/ILunchTime/GetArrivalTimesResponse")]
        System.Threading.Tasks.Task<System.TimeSpan[]> GetArrivalTimesAsync(string restaurant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILunchTime/GetRestaurants", ReplyAction="http://tempuri.org/ILunchTime/GetRestaurantsResponse")]
        LunchTime.Client.LunchTimeService.RestaurantData[] GetRestaurants();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILunchTime/GetRestaurants", ReplyAction="http://tempuri.org/ILunchTime/GetRestaurantsResponse")]
        System.Threading.Tasks.Task<LunchTime.Client.LunchTimeService.RestaurantData[]> GetRestaurantsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILunchTime/GetStatistic", ReplyAction="http://tempuri.org/ILunchTime/GetStatisticResponse")]
        LunchTime.Client.LunchTimeService.StatisticData GetStatistic(string restaurant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILunchTime/GetStatistic", ReplyAction="http://tempuri.org/ILunchTime/GetStatisticResponse")]
        System.Threading.Tasks.Task<LunchTime.Client.LunchTimeService.StatisticData> GetStatisticAsync(string restaurant);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILunchTime/GetStatistics", ReplyAction="http://tempuri.org/ILunchTime/GetStatisticsResponse")]
        LunchTime.Client.LunchTimeService.StatisticData[] GetStatistics();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILunchTime/GetStatistics", ReplyAction="http://tempuri.org/ILunchTime/GetStatisticsResponse")]
        System.Threading.Tasks.Task<LunchTime.Client.LunchTimeService.StatisticData[]> GetStatisticsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILunchTime/InsertArrivalTimes", ReplyAction="http://tempuri.org/ILunchTime/InsertArrivalTimesResponse")]
        void InsertArrivalTimes(LunchTime.Client.LunchTimeService.ArrivalTimeData[] arrivalTimes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILunchTime/InsertArrivalTimes", ReplyAction="http://tempuri.org/ILunchTime/InsertArrivalTimesResponse")]
        System.Threading.Tasks.Task InsertArrivalTimesAsync(LunchTime.Client.LunchTimeService.ArrivalTimeData[] arrivalTimes);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILunchTimeChannel : LunchTime.Client.LunchTimeService.ILunchTime, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LunchTimeClient : System.ServiceModel.ClientBase<LunchTime.Client.LunchTimeService.ILunchTime>, LunchTime.Client.LunchTimeService.ILunchTime {
        
        public LunchTimeClient() {
        }
        
        public LunchTimeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LunchTimeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LunchTimeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LunchTimeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.TimeSpan[] GetArrivalTimes(string restaurant) {
            return base.Channel.GetArrivalTimes(restaurant);
        }
        
        public System.Threading.Tasks.Task<System.TimeSpan[]> GetArrivalTimesAsync(string restaurant) {
            return base.Channel.GetArrivalTimesAsync(restaurant);
        }
        
        public LunchTime.Client.LunchTimeService.RestaurantData[] GetRestaurants() {
            return base.Channel.GetRestaurants();
        }
        
        public System.Threading.Tasks.Task<LunchTime.Client.LunchTimeService.RestaurantData[]> GetRestaurantsAsync() {
            return base.Channel.GetRestaurantsAsync();
        }
        
        public LunchTime.Client.LunchTimeService.StatisticData GetStatistic(string restaurant) {
            return base.Channel.GetStatistic(restaurant);
        }
        
        public System.Threading.Tasks.Task<LunchTime.Client.LunchTimeService.StatisticData> GetStatisticAsync(string restaurant) {
            return base.Channel.GetStatisticAsync(restaurant);
        }
        
        public LunchTime.Client.LunchTimeService.StatisticData[] GetStatistics() {
            return base.Channel.GetStatistics();
        }
        
        public System.Threading.Tasks.Task<LunchTime.Client.LunchTimeService.StatisticData[]> GetStatisticsAsync() {
            return base.Channel.GetStatisticsAsync();
        }
        
        public void InsertArrivalTimes(LunchTime.Client.LunchTimeService.ArrivalTimeData[] arrivalTimes) {
            base.Channel.InsertArrivalTimes(arrivalTimes);
        }
        
        public System.Threading.Tasks.Task InsertArrivalTimesAsync(LunchTime.Client.LunchTimeService.ArrivalTimeData[] arrivalTimes) {
            return base.Channel.InsertArrivalTimesAsync(arrivalTimes);
        }
    }
}
